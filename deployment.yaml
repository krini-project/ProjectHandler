apiVersion: apps/v1
kind: Deployment
metadata:
  name: projecthandlerdeployment
  namespace: cwlab-elixir-develop
  labels:
    app: projecthandler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: projecthandler
  template:
    metadata:
      labels:
        app: projecthandler
    spec:
      imagePullSecrets:
        - name: pipeline-docker-registry
      containers:
      - name: projecthandler
        image: ${CICD_REGISTRY}/krini/projecthandler:0.1-${CICD_EXECUTION_SEQUENCE}
        ports:
        - containerPort: 8080
        env:
          - name: swaggerStaticPath
            value: "/www/swagger-ui"
          - name: APIKey
            valueFrom:
              secretKeyRef:
                name: projecthandlerapikey
                key: ProjectHandlerAPIKey
---
apiVersion: v1
kind: Service
metadata:
  name: projecthandlerservice
  namespace: cwlab-elixir-develop
spec:
  selector:
    app: projecthandler
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: testingress
  namespace: cwlab-elixir-develop
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  rules:
  - host: projecthandler.krini.ingress.demo.experimental.rancher.computational.bio
    http:
      paths:
      - backend:
          serviceName: projecthandlerservice
          servicePort: 80
        path: /
  tls: # < placing a host in the TLS config will indicate a certificate should be created
  - hosts:
    - projecthandler.krini.ingress.demo.experimental.rancher.computational.bio
    secretName: container-test-cert # < cert-manager will store the created certificate in this secret.