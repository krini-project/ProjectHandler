basePath: /v1
definitions:
  models.Project:
    properties:
      ProjectID:
        type: string
      ProjectName:
        type: string
    type: object
  models.WESEndpoint:
    properties:
      ID:
        type: integer
      Link:
        type: string
      Name:
        type: string
      Owner_id:
        type: string
    type: object
  models.Workflow:
    properties:
      Link:
        type: string
      Project_id:
        type: string
      Version:
        type: string
      WorkflowID:
        type: integer
      Workflowname:
        type: string
    type: object
info:
  contact: {}
  license: {}
  title: Project handler API for the Krini project
  version: "0.1"
paths:
  /projects:
    get:
      parameters:
      - description: user id
        in: query
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Project'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Lists all projects of a user
  /projects/adduser:
    post:
      parameters:
      - description: project id
        in: query
        name: projectid
        required: true
        type: string
      - description: user id
        in: query
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - ApiKeyAuth: []
      summary: Lists all projects of a user
  /projects/create:
    post:
      description: Create project
      parameters:
      - description: project name
        in: query
        name: projectname
        required: true
        type: string
      - description: user id
        in: query
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - ApiKeyAuth: []
      summary: Lists all projects of a user
  /projects/removeUser:
    post:
      parameters:
      - description: project id
        in: query
        name: projectid
        required: true
        type: string
      - description: user id
        in: query
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - ApiKeyAuth: []
      summary: Removes a user from a project
  /projects/wes/add:
    post:
      parameters:
      - description: user id
        in: query
        name: userid
        required: true
        type: string
      - description: project id
        in: query
        name: projectid
        required: true
        type: string
      - description: endpoint name
        in: query
        name: name
        required: true
        type: string
      - description: wes link
        in: query
        name: link
        required: true
        type: string
      security:
      - ApiKeyAuth: []
      summary: 'Creates a new user if none exists; not intended for production use:
        In production users are dynamically created based on external oauth2/oidc
        ids'
  /projects/wes/list:
    get:
      parameters:
      - description: user id
        in: query
        name: userid
        required: true
        type: string
      - description: project id
        in: query
        name: projectid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.WESEndpoint'
            type: array
      security:
      - ApiKeyAuth: []
      summary: 'Creates a new user if none exists; not intended for production use:
        In production users are dynamically created based on external oauth2/oidc
        ids'
  /projects/workflows/add:
    post:
      parameters:
      - description: user id
        in: query
        name: userid
        required: true
        type: string
      - description: project id
        in: query
        name: projectid
        required: true
        type: string
      - description: workflow name
        in: query
        name: name
        required: true
        type: string
      - description: workflow link
        in: query
        name: link
        required: true
        type: string
      - description: workflow version
        in: query
        name: version
        required: true
        type: string
      responses:
        "200": {}
      security:
      - ApiKeyAuth: []
      summary: 'Creates a new user if none exists; not intended for production use:
        In production users are dynamically created based on external oauth2/oidc
        ids'
  /projects/workflows/get:
    get:
      parameters:
      - description: user id
        in: query
        name: userid
        required: true
        type: string
      - description: project id
        in: query
        name: projectid
        required: true
        type: string
      - description: workflow id
        in: query
        name: workflowID
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Workflow'
      security:
      - ApiKeyAuth: []
      summary: Returns all workflows of a given project
  /projects/workflows/list:
    get:
      parameters:
      - description: user id
        in: query
        name: userid
        required: true
        type: string
      - description: project id
        in: query
        name: projectid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Workflow'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Returns all workflows of a given project
  /users/create:
    post:
      parameters:
      - description: user id
        in: query
        name: userid
        required: true
        type: string
      - description: user email address
        in: query
        name: usermail
        required: true
        type: string
      security:
      - ApiKeyAuth: []
      summary: 'Creates a new user if none exists; not intended for production use:
        In production users are dynamically created based on external oauth2/oidc
        ids'
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-API-Key
    type: apiKey
swagger: "2.0"
